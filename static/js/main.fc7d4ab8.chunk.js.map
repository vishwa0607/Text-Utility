{"version":3,"sources":["img1.jpg","components/Navbar.js","components/About.js","components/TextForm.js","components/Alert.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","home","onClick","toggleMode","role","htmlFor","About","TextForm","useState","text","setText","style","color","Heading","value","backgroundColor","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","copyText","document","getElementById","select","navigator","clipboard","writeText","split","filter","element","prototype","PropTypes","string","defaultProps","Alert","height","alert","class","msg","Footer","App","setMode","setAlert","message","setTimeout","backgroundImage","img1","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fc7d4ab8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img1.e0e0a807.jpg\";","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\nexport default function Navbar(props)\r\n {\r\n   \r\n    return (\r\n        <>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}` }>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\"  id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">{props.home}</Link>\r\n                </li>\r\n                <li className=\"nav-item\"> \r\n                <Link className=\"nav-link\" to=\"/about\">About us</Link>\r\n                </li>\r\n           \r\n           </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}` }>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n         </div>\r\n         \r\n        </div>\r\n      </div>\r\n    </nav> \r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.prototype={\r\n    title: PropTypes.string,\r\n    home: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps={\r\n    title:  'set title',\r\n    home: 'Home'\r\n}","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div className='container'>\r\n      \r\n        <h3 >Text Utility</h3>\r\n        <p >It is a website where one can manipulate his text according to his requirement .</p>\r\n    \r\n  </div>\r\n    \r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    \r\n      const CopyText=()=>{\r\n         /* Get the text field */\r\n  var copyText = document.getElementById(\"textArea\");\r\n\r\n  /* Select the text field */\r\n  copyText.select();\r\n  \r\n\r\n   /* Copy the text inside the text field */\r\n  navigator.clipboard.writeText(copyText.value);\r\n\r\n  /* Alert the copied text */\r\n  props.showAlert(\"Copied to clipboard \",\"Success\")\r\n      }  \r\n      \r\n      const HandleUP= ()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Upper Case \",\"Success\")\r\n      }\r\n      const HandleLw= ()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lower Case \",\"Success\")\r\n      }\r\n      const HandleClear= ()=>{\r\n      let newText='';\r\n        setText(newText)\r\n        props.showAlert(\"Text cleared \",\"Success\")\r\n          }\r\n  const handleOnchange =(event)=>{\r\n    setText(event.target.value)\r\n    \r\n  }\r\n  const [text, setText]=useState('Enter text Here')\r\n  return (\r\n\r\n    <>\r\n      <div className=\"container \" style={{color:props.mode==='dark'?'white':'black'}} >\r\n        <h1>{props.Heading}</h1>\r\n        <div className='mb-3' >\r\n      \r\n          <textarea type=\"text\" value={text} style={{backgroundColor:props.mode==='light'?'white':'#495057',color:props.mode==='dark'?'white':'black'}} onChange={handleOnchange} className=\"form-control\" id=\"textArea\" rows=\"5\"></textarea>\r\n        </div>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-3\" onClick={HandleUP}>Convert to UpperCase</button>\r\n      <button disabled={text.length===0}  className=\"btn btn-secondary mx-3\" onClick={HandleLw}>Convert to LowerCase</button>  \r\n      <button disabled={text.length===0}  className=\"btn btn-danger mx-3\" onClick={HandleClear}>Clear text</button>  \r\n      <button disabled={text.length===0}   className=\"btn btn-warning\" onClick={CopyText}>Copy text</button>    \r\n      \r\n    </div>\r\n    <div className=\"container my-4 \" style={{color:props.mode==='dark'?'white':'black'}}>\r\n      <h3>Your Text Summary</h3>\r\n      <p ><b>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length}</b> words and <b>{text.length}</b> Characters</p>\r\n      <p><b>{.008*text.split(\" \").filter((element)=>{return element.length!==0}).length}</b> min to read</p>\r\n      <h3>Preview</h3>\r\n      <p >{text.length>0?text:'Enter text above for Preview'}</p>\r\n      \r\n    </div>\r\n  </>\r\n  \r\n  )\r\n}\r\n","import React from 'react'\r\nfunction Alert(props) {\r\n\r\n  return (\r\n    <div style={{height:60}}>\r\n    {props.alert && <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n           <strong>{props.alert.type} </strong>: {props.alert.msg}\r\n \r\n    </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Alert","import React from 'react'\r\n\r\nexport default function Footer(props) {\r\n  return (\r\n    \r\n  <footer className={`bg-${props.mode} text-center`}  style={{color:props.mode==='dark'?'white':'black'}} >\r\n         \r\n\r\n    \r\n    <div className=\"text-center p-3 bg light \"  >\r\n      © 2022 Copyright:\r\n      <p > All right Reserved by Text Utility</p>\r\n    </div>\r\n  \r\n  </footer>\r\n  \r\n  )\r\n}\r\n\r\n","\nimport './App.css';\nimport img1 from './img1.jpg';\nimport Navbar from './components/Navbar';\nimport About from './components/About';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router ,\n  Route,\n  Routes,\n} from \"react-router-dom\";\nimport Footer from './components/Footer';\n\nfunction App() {\n  \n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert=(message, type)=>{\n      setAlert({\n      msg:message,\n      type:type\n  \n        })\n      setTimeout(() => {\n      setAlert(null);\n      \n      }, 1500);\n  };    \n\n\n  const toggleMode=()=>\n  {\n    if(mode==='light')\n    {\n      setMode('dark');\n    document.body.style.backgroundColor='#131e2e'\n    showAlert(\"Dark mode Enabled\",\"Success\")\n    }\n    \n    else\n    {setMode('light');\n    document.body.style.backgroundColor='white'\n    showAlert(\"Light mode Enabled\",\"Success\")\n    }\n  }\n\n  return (\n    <>\n    <div style={{backgroundImage:img1}} >\n      \n      \n  <Router>\n    <Navbar title=\"TextUtility\" toggleMode={toggleMode} mode={mode}/>\n    <Alert alert={alert}/>\n    <div className=\"container\">\n    <Routes>\n    \n          <Route exact path=\"/about\" element={<About/>}/>\n          <Route exact path=\"/\"\n          element={<TextForm showAlert={showAlert} Heading=\"Enter Text to convert\" mode={mode}/>} />\n          \n    </Routes>\n      \n    </div>\n    </Router>\n    <Footer mode={mode}/> \n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}